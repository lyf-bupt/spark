/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.    
 */

package calculator.idl;


/**
* calculator/idl/CalculatorCORBAServiceHelper.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from CalculatorCORBA.idl
* roda, 15 padziernik 2008 15:59:26 CEST
*/

abstract public class CalculatorCORBAServiceHelper
{
  private static String  _id = "IDL:calculator/idl/CalculatorCORBAService:1.0";

  public static void insert (org.omg.CORBA.Any a, calculator.idl.CalculatorCORBAService that)
  {
    org.omg.CORBA.portable.OutputStream out = a.create_output_stream ();
    a.type (type ());
    write (out, that);
    a.read_value (out.create_input_stream (), type ());
  }

  public static calculator.idl.CalculatorCORBAService extract (org.omg.CORBA.Any a)
  {
    return read (a.create_input_stream ());
  }

  private static org.omg.CORBA.TypeCode __typeCode = null;
  synchronized public static org.omg.CORBA.TypeCode type ()
  {
    if (__typeCode == null)
    {
      __typeCode = org.omg.CORBA.ORB.init ().create_interface_tc (calculator.idl.CalculatorCORBAServiceHelper.id (), "CalculatorCORBAService");
    }
    return __typeCode;
  }

  public static String id ()
  {
    return _id;
  }

  public static calculator.idl.CalculatorCORBAService read (org.omg.CORBA.portable.InputStream istream)
  {
    return narrow (istream.read_Object (_CalculatorCORBAServiceStub.class));
  }

  public static void write (org.omg.CORBA.portable.OutputStream ostream, calculator.idl.CalculatorCORBAService value)
  {
    ostream.write_Object ((org.omg.CORBA.Object) value);
  }

  public static calculator.idl.CalculatorCORBAService narrow (org.omg.CORBA.Object obj)
  {
    if (obj == null)
      return null;
    else if (obj instanceof calculator.idl.CalculatorCORBAService)
      return (calculator.idl.CalculatorCORBAService)obj;
    else if (!obj._is_a (id ()))
      throw new org.omg.CORBA.BAD_PARAM ();
    else
    {
      org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl)obj)._get_delegate ();
      calculator.idl._CalculatorCORBAServiceStub stub = new calculator.idl._CalculatorCORBAServiceStub ();
      stub._set_delegate(delegate);
      return stub;
    }
  }

  public static calculator.idl.CalculatorCORBAService unchecked_narrow (org.omg.CORBA.Object obj)
  {
    if (obj == null)
      return null;
    else if (obj instanceof calculator.idl.CalculatorCORBAService)
      return (calculator.idl.CalculatorCORBAService)obj;
    else
    {
      org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl)obj)._get_delegate ();
      calculator.idl._CalculatorCORBAServiceStub stub = new calculator.idl._CalculatorCORBAServiceStub ();
      stub._set_delegate(delegate);
      return stub;
    }
  }

}
